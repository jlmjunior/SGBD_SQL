-- ##################  FUNÇÃO PARA CALCULAR A DISTANCIA DA PARADA ################## 

CREATE FUNCTION calcular_distancia (lat FLOAT, lon FLOAT, stop_lat FLOAT, stop_lon FLOAT)
RETURNS FLOAT
DETERMINISTIC
RETURN (6371 * acos(
 cos( radians(lat) )
 * cos( radians( stop_lat ) )
 * cos( radians( stop_lon ) - radians(lon) )
 + sin( radians(lat) )
 * sin( radians( stop_lat ) ) 
 )
);

-- ##################  PROCEDIMENTO ################## 

SELECT d.route_id AS id_rota, routes.route_long_name AS rota, d.parada_inicial, d.parada_final
FROM (SELECT j.trip_id, trips.route_id, j.parada_inicial, j.parada_final
FROM (SELECT e.trip_id, e.stop_name AS parada_inicial, t.stop_name AS parada_final,( e.inicio + t.fim ) AS resultado FROM (SELECT DISTINCT trip_id, stop_id, stop_name ,stop_sequence, inicio FROM (SELECT 
stop_times.trip_id,
stop_times.stop_id,
stops.stop_name,
stop_times.stop_sequence,
calcular_distancia(-30.037286, -51.236374, stop_lat, stop_lon) AS inicio,
calcular_distancia(-30.047977, -51.228663, stop_lat, stop_lon) AS fim
FROM stop_times
INNER JOIN stops ON stop_times.stop_id = stops.stop_id) AS r
ORDER BY inicio) AS e, (SELECT DISTINCT trip_id, stop_id, stop_name,stop_sequence, fim FROM (SELECT 
stop_times.trip_id,
stop_times.stop_id,
stops.stop_name,
stop_times.stop_sequence,
calcular_distancia(-30.037286, -51.236374, stop_lat, stop_lon) AS inicio,
calcular_distancia(-30.047977, -51.228663, stop_lat, stop_lon) AS fim
FROM stop_times
INNER JOIN stops ON stop_times.stop_id = stops.stop_id) AS r
ORDER BY fim) AS t
WHERE e.trip_id = t.trip_id AND e.stop_sequence < t.stop_sequence
ORDER BY resultado
LIMIT 1) AS j
INNER JOIN trips ON j.trip_id = trips.trip_id) AS d
INNER JOIN routes ON d.route_id = routes.route_id;
