-- FUNÇÃO PARA CALCULAR A DISTANCIA DA PARADA
CREATE FUNCTION calcular_distancia (lat FLOAT, lon FLOAT, stop_lat FLOAT, stop_lon FLOAT)
RETURNS FLOAT
DETERMINISTIC
RETURN (6371 * acos(
 cos( radians(lat) )
 * cos( radians( stop_lat ) )
 * cos( radians( stop_lon ) - radians(lon) )
 + sin( radians(lat) )
 * sin( radians( stop_lat ) ) 
 )
);

-- CÓDIGO
SELECT stop_id, stop_name, calcular_distancia(-30.03166, -51.2314272, stop_lat, stop_lon) as dist 
    FROM stops
    ORDER BY dist
    LIMIT 10;
    

SELECT stop_id, stop_name, calcular_distancia(-30.142133, -51.323412, stop_lat, stop_lon) as dist
	FROM stops
    WHERE = 1533
    LIMIT 10;
    
SELECT trip_id, stop_id, stop_sequence, fim FROM (SELECT 
stop_times.trip_id,
stop_times.stop_id,
stop_times.stop_sequence,
calcular_distancia(-30.03166, -51.2314272, stop_lat, stop_lon) AS inicio,
calcular_distancia(-30.142133, -51.323412, stop_lat, stop_lon) AS fim
FROM stop_times
INNER JOIN stops ON stop_times.stop_id = stops.stop_id) AS r
WHERE trip_id = "188-2@5#1055"
ORDER BY fim;

SELECT e.trip_id, ( e.inicio + t.fim ) AS resultado FROM (SELECT DISTINCT trip_id, stop_id, stop_sequence, inicio FROM (SELECT 
stop_times.trip_id,
stop_times.stop_id,
stop_times.stop_sequence,
calcular_distancia(-30.03166, -51.2314272, stop_lat, stop_lon) AS inicio,
calcular_distancia(-30.142133, -51.323412, stop_lat, stop_lon) AS fim
FROM stop_times
INNER JOIN stops ON stop_times.stop_id = stops.stop_id) AS r
ORDER BY inicio) AS e, (SELECT DISTINCT trip_id, stop_id, stop_sequence, fim FROM (SELECT 
stop_times.trip_id,
stop_times.stop_id,
stop_times.stop_sequence,
calcular_distancia(-30.03166, -51.2314272, stop_lat, stop_lon) AS inicio,
calcular_distancia(-30.142133, -51.323412, stop_lat, stop_lon) AS fim
FROM stop_times
INNER JOIN stops ON stop_times.stop_id = stops.stop_id) AS r
ORDER BY fim) AS t
WHERE e.trip_id = t.trip_id AND e.stop_sequence < t.stop_sequence
ORDER BY resultado;